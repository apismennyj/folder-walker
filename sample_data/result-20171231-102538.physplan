17/05/22 18:17:25 INFO acceleratorGenerator: Exchange hashpartitioning(id#243, 126) [pid: -1, id: 1, inner: false, sid: 1]: {StructType(  StructField(id, string, true),  StructField(unique_mem_id, string, true),  StructField(unique_account_id, string, true),  StructField(unique_transaction_id, string, true),  StructField(cobrand_id, string, true),  StructField(sum_info_id, string, true),  StructField(amount, float, true),  StructField(currency_id, string, true),  StructField(description, string, true),  StructField(transaction_date, date, true),  StructField(post_date, date, true),  StructField(transaction_base_type, string, true),  StructField(transaction_category_id, string, true),  StructField(transaction_category_name, string, true),  StructField(merchant_name, string, true),  StructField(city, string, true),  StructField(state, string, true),  StructField(zip_code, string, true),  StructField(country, string, true),  StructField(transaction_origin, string, true),  StructField(file_created_date, date, true),  StructField(xxxx_transaction_status, string, true),  StructField(xxxx_store_id, string, true),  StructField(sanitized_description, string, true),  StructField(date, date, true),  StructField(panel_type, string, true),  StructField(source, string, true),  StructField(file_name_date, date, true))}
+- WholeStageCodegen [pid: 1, id: 2, inner: false, sid: 1]: {StructType(  StructField(id, string, true),  StructField(unique_mem_id, string, true),  StructField(unique_account_id, string, true),  StructField(unique_transaction_id, string, true),  StructField(cobrand_id, string, true),  StructField(sum_info_id, string, true),  StructField(amount, float, true),  StructField(currency_id, string, true),  StructField(description, string, true),  StructField(transaction_date, date, true),  StructField(post_date, date, true),  StructField(transaction_base_type, string, true),  StructField(transaction_category_id, string, true),  StructField(transaction_category_name, string, true),  StructField(merchant_name, string, true),  StructField(city, string, true),  StructField(state, string, true),  StructField(zip_code, string, true),  StructField(country, string, true),  StructField(transaction_origin, string, true),  StructField(file_created_date, date, true),  StructField(xxxx_transaction_status, string, true),  StructField(xxxx_store_id, string, true),  StructField(sanitized_description, string, true),  StructField(date, date, true),  StructField(panel_type, string, true),  StructField(source, string, true),  StructField(file_name_date, date, true))}
   +- SerializeFromObject [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), id, java.lang.String, nil, true)], true) AS id#243, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), unique_mem_id, java.lang.String, nil, true)], true) AS unique_mem_id#244, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), unique_account_id, java.lang.String, nil, true)], true) AS unique_account_id#245, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), unique_transaction_id, java.lang.String, nil, true)], true) AS unique_transaction_id#246, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), cobrand_id, scala.Option, nil, true))], true) AS cobrand_id#247, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), sum_info_id, scala.Option, nil, true))], true) AS sum_info_id#248, unwrapoption(FloatType, invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), amount, scala.Option, nil, true)) AS amount#249, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), currency_id, scala.Option, nil, true))], true) AS currency_id#250, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), description, scala.Option, nil, true))], true) AS description#251, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, date, fromJavaDate, [unwrapoption(ObjectType(class java.sql.Date), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), transaction_date, scala.Option, nil, true))], true) AS transaction_date#252, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, date, fromJavaDate, [unwrapoption(ObjectType(class java.sql.Date), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), post_date, scala.Option, nil, true))], true) AS post_date#253, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), transaction_base_type, scala.Option, nil, true))], true) AS transaction_base_type#254, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), transaction_category_id, scala.Option, nil, true))], true) AS transaction_category_id#255, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), transaction_category_name, scala.Option, nil, true))], true) AS transaction_category_name#256, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), merchant_name, scala.Option, nil, true))], true) AS merchant_name#257, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), city, scala.Option, nil, true))], true) AS city#258, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), state, scala.Option, nil, true))], true) AS state#259, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), zip_code, scala.Option, nil, true))], true) AS zip_code#260, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), country, scala.Option, nil, true))], true) AS country#261, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), transaction_origin, scala.Option, nil, true))], true) AS transaction_origin#262, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, date, fromJavaDate, [invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), file_created_date, java.sql.Date, nil, true)], true) AS file_created_date#263, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), xxxx_transaction_status, scala.Option, nil, true))], true) AS xxxx_transaction_status#264, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [unwrapoption(ObjectType(class java.lang.String), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), xxxx_store_id, scala.Option, nil, true))], true) AS xxxx_store_id#265, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), sanitized_description, java.lang.String, nil, true)], true) AS sanitized_description#266, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, date, fromJavaDate, [unwrapoption(ObjectType(class java.sql.Date), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), date, scala.Option, nil, true))], true) AS date#267, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), panel_type, java.lang.String, nil, true)], true) AS panel_type#268, staticinvoke(class org.apache.spark.unsafe.types.UTF8String, string, fromString, [invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), source, java.lang.String, nil, true)], true) AS source#269, staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, date, fromJavaDate, [unwrapoption(ObjectType(class java.sql.Date), invoke(assertnotnull(input[0, com.companyx.datascience.transactions.model.Transaction, true], top level Product input object), file_name_date, scala.Option, nil, true))], true) AS file_name_date#270] [pid: 2, id: 3, inner: false, sid: 1]: {StructType(  StructField(id, string, true),  StructField(unique_mem_id, string, true),  StructField(unique_account_id, string, true),  StructField(unique_transaction_id, string, true),  StructField(cobrand_id, string, true),  StructField(sum_info_id, string, true),  StructField(amount, float, true),  StructField(currency_id, string, true),  StructField(description, string, true),  StructField(transaction_date, date, true),  StructField(post_date, date, true),  StructField(transaction_base_type, string, true),  StructField(transaction_category_id, string, true),  StructField(transaction_category_name, string, true),  StructField(merchant_name, string, true),  StructField(city, string, true),  StructField(state, string, true),  StructField(zip_code, string, true),  StructField(country, string, true),  StructField(transaction_origin, string, true),  StructField(file_created_date, date, true),  StructField(xxxx_transaction_status, string, true),  StructField(xxxx_store_id, string, true),  StructField(sanitized_description, string, true),  StructField(date, date, true),  StructField(panel_type, string, true),  StructField(source, string, true),  StructField(file_name_date, date, true))}
      +- Filter invoke(closure(com.companyx.datascience.xxxx.ingestion.Ingestion$$anonfun$ingest$2), apply, boolean, [obj#242], true) [pid: 3, id: 4, inner: false, sid: 1]: {StructType(  StructField(obj, object, false))}
         +- MapElements com.companyx.datascience.xxxx.ingestion.Ingestion$$anonfun$ingest$1 obj#242: com.companyx.datascience.transactions.model.Transaction  [pid: 4, id: 5, inner: false, sid: 1]: {StructType(  StructField(obj, object, false))}
            +- MapElements com.companyx.datascience.xxxx.ingestion.Ingestion$$anonfun$1 obj#183: com.companyx.datascience.transactions.model.Transaction  [pid: 5, id: 6, inner: false, sid: 1]: {StructType(  StructField(obj, object, false))}
               +- DeserializeToObject newinstance(com.companyx.datascience.xxxx.ingestion.RawCreditCardTransaction, com.companyx.datascience.xxxx.ingestion.RawCreditCardTransaction, [invoke(unique_mem_id#0, toString, java.lang.String, nil, true), invoke(unique_card_account_id#1, toString, java.lang.String, nil, true), invoke(unique_card_transaction_id#2, toString, java.lang.String, nil, true), invoke(mem_id#3, toString, java.lang.String, nil, true), invoke(card_account_id#4, toString, java.lang.String, nil, true), invoke(card_transaction_id#5, toString, java.lang.String, nil, true), wrapoption(invoke(cobrand_id#6, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(sum_info_id#7, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(amount#8, FloatType), wrapoption(invoke(currency_id#9, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(description#10, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, java.sql.Date, toJavaDate, [transaction_date#11], true), ObjectType(class java.sql.Date)), wrapoption(staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, java.sql.Date, toJavaDate, [post_date#12], true), ObjectType(class java.sql.Date)), wrapoption(invoke(transaction_base_type#13, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(transaction_category_id#14, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(transaction_category_name#15, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(merchant_name#16, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(store_id#17, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(factual_category#18, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(street#19, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(city#20, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(state#21, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(zip_code#22, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(website#23, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(phone_number#24, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(fax_number#25, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(chain_name#26, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(latitude#27, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(longitude#28, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(neighbourhood#29, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(transaction_origin#30, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(confidence_score#31, FloatType), wrapoption(invoke(factual_id#32, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), staticinvoke(class org.apache.spark.sql.catalyst.util.DateTimeUtils$, java.sql.Date, toJavaDate, [file_created_date#33], true), wrapoption(invoke(transaction_src_element_id#34, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(xxxx_transaction_status#35, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), wrapoption(invoke(xxxx_store_id#36, toString, java.lang.String, nil, true), ObjectType(class java.lang.String)), invoke(file_name#75, toString, java.lang.String, nil, true)], false), obj#182: com.companyx.datascience.xxxx.ingestion.RawCreditCardTransaction [pid: 6, id: 7, inner: false, sid: 1]: {StructType(  StructField(obj, object, false))}
                  +- Project [UNIQUE_MEM_ID#0, UNIQUE_CARD_ACCOUNT_ID#1, UNIQUE_CARD_TRANSACTION_ID#2, MEM_ID#3, CARD_ACCOUNT_ID#4, CARD_TRANSACTION_ID#5, COBRAND_ID#6, SUM_INFO_ID#7, AMOUNT#8, CURRENCY_ID#9, DESCRIPTION#10, TRANSACTION_DATE#11, POST_DATE#12, TRANSACTION_BASE_TYPE#13, TRANSACTION_CATEGORY_ID#14, TRANSACTION_CATEGORY_NAME#15, MERCHANT_NAME#16, STORE_ID#17, FACTUAL_CATEGORY#18, STREET#19, CITY#20, STATE#21, ZIP_CODE#22, WEBSITE#23, PHONE_NUMBER#24, FAX_NUMBER#25, CHAIN_NAME#26, LATITUDE#27, LONGITUDE#28, NEIGHBOURHOOD#29, TRANSACTION_ORIGIN#30, CONFIDENCE_SCORE#31, FACTUAL_ID#32, FILE_CREATED_DATE#33, TRANSACTION_SRC_ELEMENT_ID#34, XXXX_TRANSACTION_STATUS#35, XXXX_STORE_ID#36, input_file_name() AS file_name#75] [pid: 7, id: 8, inner: false, sid: 1]: {StructType(  StructField(UNIQUE_MEM_ID, string, true),  StructField(UNIQUE_CARD_ACCOUNT_ID, string, true),  StructField(UNIQUE_CARD_TRANSACTION_ID, string, true),  StructField(MEM_ID, string, true),  StructField(CARD_ACCOUNT_ID, string, true),  StructField(CARD_TRANSACTION_ID, string, true),  StructField(COBRAND_ID, string, true),  StructField(SUM_INFO_ID, string, true),  StructField(AMOUNT, float, true),  StructField(CURRENCY_ID, string, true),  StructField(DESCRIPTION, string, true),  StructField(TRANSACTION_DATE, date, true),  StructField(POST_DATE, date, true),  StructField(TRANSACTION_BASE_TYPE, string, true),  StructField(TRANSACTION_CATEGORY_ID, string, true),  StructField(TRANSACTION_CATEGORY_NAME, string, true),  StructField(MERCHANT_NAME, string, true),  StructField(STORE_ID, string, true),  StructField(FACTUAL_CATEGORY, string, true),  StructField(STREET, string, true),  StructField(CITY, string, true),  StructField(STATE, string, true),  StructField(ZIP_CODE, string, true),  StructField(WEBSITE, string, true),  StructField(PHONE_NUMBER, string, true),  StructField(FAX_NUMBER, string, true),  StructField(CHAIN_NAME, string, true),  StructField(LATITUDE, string, true),  StructField(LONGITUDE, string, true),  StructField(NEIGHBOURHOOD, string, true),  StructField(TRANSACTION_ORIGIN, string, true),  StructField(CONFIDENCE_SCORE, float, true),  StructField(FACTUAL_ID, string, true),  StructField(FILE_CREATED_DATE, date, true),  StructField(TRANSACTION_SRC_ELEMENT_ID, string, true),  StructField(XXXX_TRANSACTION_STATUS, string, true),  StructField(XXXX_STORE_ID, string, true),  StructField(file_name, string, false))}
                     +- FileScan csv List(UNIQUE_MEM_ID#0, UNIQUE_CARD_ACCOUNT_ID#1, UNIQUE_CARD_TRANSACTION_ID#2, MEM_ID#3, CARD_ACCOUNT_ID#4, CARD_TRANSACTION_ID#5, COBRAND_ID#6, SUM_INFO_ID#7, AMOUNT#8, CURRENCY_ID#9, DESCRIPTION#10, TRANSACTION_DATE#11, POST_DATE#12, TRANSACTION_BASE_TYPE#13, TRANSACTION_CATEGORY_ID#14, TRANSACTION_CATEGORY_NAME#15, MERCHANT_NAME#16, STORE_ID#17, FACTUAL_CATEGORY#18, STREET#19, CITY#20, STATE#21, ZIP_CODE#22, WEBSITE#23, PHONE_NUMBER#24, FAX_NUMBER#25, CHAIN_NAME#26, LATITUDE#27, LONGITUDE#28, NEIGHBOURHOOD#29, TRANSACTION_ORIGIN#30, CONFIDENCE_SCORE#31, FACTUAL_ID#32, FILE_CREATED_DATE#33, TRANSACTION_SRC_ELEMENT_ID#34, XXXX_TRANSACTION_STATUS#35, XXXX_STORE_ID#36)ArrayBuffer(Batched: false, Format: , Location: [], PartitionCount: 0, PartitionFilters: [], PushedFilters: [], ReadSchema: struct<UNIQUE_MEM_ID:string,UNIQUE_CARD_ACCOUNT_ID:string,UNIQUE_CARD_TRANSACTION_ID:string,MEM_ID:string,CARD_ACCOUNT_ID:string,CARD_TRANSACTION_ID:string,COBRAND_ID:string,SUM_INFO_ID:string,AMOUNT:float,CURRENCY_ID:string,DESCRIPTION:string,TRANSACTION_DATE:date,POST_DATE:date,TRANSACTION_BASE_TYPE:string,TRANSACTION_CATEGORY_ID:string,TRANSACTION_CATEGORY_NAME:string,MERCHANT_NAME:string,STORE_ID:string,FACTUAL_CATEGORY:string,STREET:string,CITY:string,STATE:string,ZIP_CODE:string,WEBSITE:string,PHONE_NUMBER:string,FAX_NUMBER:string,CHAIN_NAME:string,LATITUDE:string,LONGITUDE:string,NEIGHBOURHOOD:string,TRANSACTION_ORIGIN:string,CONFIDENCE_SCORE:float,FACTUAL_ID:string,FILE_CREATED_DATE:date,TRANSACTION_SRC_ELEMENT_ID:string,XXXX_TRANSACTION_STATUS:string,XXXX_STORE_ID:string>), Input RDD Schema {StructType(  StructField(UNIQUE_MEM_ID, string, true),  StructField(UNIQUE_CARD_ACCOUNT_ID, string, true),  StructField(UNIQUE_CARD_TRANSACTION_ID, string, true),  StructField(MEM_ID, string, true),  StructField(CARD_ACCOUNT_ID, string, true),  StructField(CARD_TRANSACTION_ID, string, true),  StructField(COBRAND_ID, string, true),  StructField(SUM_INFO_ID, string, true),  StructField(AMOUNT, float, true),  StructField(CURRENCY_ID, string, true),  StructField(DESCRIPTION, string, true),  StructField(TRANSACTION_DATE, date, true),  StructField(POST_DATE, date, true),  StructField(TRANSACTION_BASE_TYPE, string, true),  StructField(TRANSACTION_CATEGORY_ID, string, true),  StructField(TRANSACTION_CATEGORY_NAME, string, true),  StructField(MERCHANT_NAME, string, true),  StructField(STORE_ID, string, true),  StructField(FACTUAL_CATEGORY, string, true),  StructField(STREET, string, true),  StructField(CITY, string, true),  StructField(STATE, string, true),  StructField(ZIP_CODE, string, true),  StructField(WEBSITE, string, true),  StructField(PHONE_NUMBER, string, true),  StructField(FAX_NUMBER, string, true),  StructField(CHAIN_NAME, string, true),  StructField(LATITUDE, string, true),  StructField(LONGITUDE, string, true),  StructField(NEIGHBOURHOOD, string, true),  StructField(TRANSACTION_ORIGIN, string, true),  StructField(CONFIDENCE_SCORE, float, true),  StructField(FACTUAL_ID, string, true),  StructField(FILE_CREATED_DATE, date, true),  StructField(TRANSACTION_SRC_ELEMENT_ID, string, true),  StructField(XXXX_TRANSACTION_STATUS, string, true),  StructField(XXXX_STORE_ID, string, true))}, Options {(sep,|),(quote,),(dateformat,yyyy-MM-dd),(inferschema,false),(comment,null),(mode,DROPMALFORMED),(header,true),(maxmalformedlogperpartition,10000),(bigstreamAvroIsUnion, false)} [pid: 8, id: 9, inner: false, sid: 1]: {StructType(  StructField(UNIQUE_MEM_ID, string, true),  StructField(UNIQUE_CARD_ACCOUNT_ID, string, true),  StructField(UNIQUE_CARD_TRANSACTION_ID, string, true),  StructField(MEM_ID, string, true),  StructField(CARD_ACCOUNT_ID, string, true),  StructField(CARD_TRANSACTION_ID, string, true),  StructField(COBRAND_ID, string, true),  StructField(SUM_INFO_ID, string, true),  StructField(AMOUNT, float, true),  StructField(CURRENCY_ID, string, true),  StructField(DESCRIPTION, string, true),  StructField(TRANSACTION_DATE, date, true),  StructField(POST_DATE, date, true),  StructField(TRANSACTION_BASE_TYPE, string, true),  StructField(TRANSACTION_CATEGORY_ID, string, true),  StructField(TRANSACTION_CATEGORY_NAME, string, true),  StructField(MERCHANT_NAME, string, true),  StructField(STORE_ID, string, true),  StructField(FACTUAL_CATEGORY, string, true),  StructField(STREET, string, true),  StructField(CITY, string, true),  StructField(STATE, string, true),  StructField(ZIP_CODE, string, true),  StructField(WEBSITE, string, true),  StructField(PHONE_NUMBER, string, true),  StructField(FAX_NUMBER, string, true),  StructField(CHAIN_NAME, string, true),  StructField(LATITUDE, string, true),  StructField(LONGITUDE, string, true),  StructField(NEIGHBOURHOOD, string, true),  StructField(TRANSACTION_ORIGIN, string, true),  StructField(CONFIDENCE_SCORE, float, true),  StructField(FACTUAL_ID, string, true),  StructField(FILE_CREATED_DATE, date, true),  StructField(TRANSACTION_SRC_ELEMENT_ID, string, true),  StructField(XXXX_TRANSACTION_STATUS, string, true),  StructField(XXXX_STORE_ID, string, true))}



##################################
